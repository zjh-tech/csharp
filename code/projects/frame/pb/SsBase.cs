// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ss_base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pb {

  /// <summary>Holder for reflection information generated from ss_base.proto</summary>
  public static partial class SsBaseReflection {

    #region Descriptor
    /// <summary>File descriptor for ss_base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SsBaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zc19iYXNlLnByb3RvEgJwYiJ7Ch1zMnNfc2VydmVyX3Nlc3Npb25fdmVy",
            "aXJ5X3JlcRIRCglzZXJ2ZXJfaWQYASABKAQSEwoLc2VydmVyX3R5cGUYAiAB",
            "KA0SFwoPc2VydmVyX3R5cGVfc3RyGAMgASgJEgoKAmlwGAQgASgJEg0KBXRv",
            "a2VuGAUgASgJIh8KHXMyc19zZXJ2ZXJfc2Vzc2lvbl92ZXJpcnlfYWNrIhkK",
            "F3Myc19zZXJ2ZXJfc2Vzc2lvbl9waW5nIhkKF3Myc19zZXJ2ZXJfc2Vzc2lv",
            "bl9wb25nIhkKF3Myc19jbGllbnRfc2Vzc2lvbl9waW5nIhkKF3Myc19jbGll",
            "bnRfc2Vzc2lvbl9wb25nInwKDHNkX2Nvbm5fYXR0chIRCglzZXJ2ZXJfaWQY",
            "ASABKAQSEwoLc2VydmVyX3R5cGUYAiABKA0SFwoPc2VydmVyX3R5cGVfc3Ry",
            "GAMgASgJEg0KBWludGVyGAQgASgJEg0KBW91dGVyGAUgASgJEg0KBXRva2Vu",
            "GAYgASgJIpACChFzZXJ2aWNlX2Rpc2NvdmVyeRIRCglzZXJ2ZXJfaWQYASAB",
            "KAQSGAoQczJzX2ludGVyX2xpc3RlbhgCIAEoCRIYChBzMnNfb3V0ZXJfbGlz",
            "dGVuGAMgASgJEiMKCWNvbm5fbGlzdBgEIAMoCzIQLnBiLnNkX2Nvbm5fYXR0",
            "chIYChBjMnNfaW50ZXJfbGlzdGVuGAUgASgJEhgKEGMyc19vdXRlcl9saXN0",
            "ZW4YBiABKAkSFQoNYzJzX21heF9jb3VudBgHIAEoDRIVCg1jMnNfaHR0cHNf",
            "dXJsGAggASgJEhYKDmMyc19odHRwc19jZXJ0GAkgASgJEhUKDWMyc19odHRw",
            "c19rZXkYCiABKAkiOQoVc2VydmljZV9kaXNjb3ZlcnlfcmVxEhEKCXNlcnZl",
            "cl9pZBgBIAEoBBINCgV0b2tlbhgCIAEoCSJqChVzZXJ2aWNlX2Rpc2NvdmVy",
            "eV9hY2sSFAoMcmVidWlsZF9mbGFnGAEgASgIEhMKC3ZlcmlmeV9mbGFnGAIg",
            "ASgIEiYKB3NkX2luZm8YAyABKAsyFS5wYi5zZXJ2aWNlX2Rpc2NvdmVyeSrJ",
            "AgoMUzJTQmFzZU1zZ0lkEhcKE3Myc19iYXNlX21pbl9tc2dfaWQQABIkCiBz",
            "MnNfc2VydmVyX3Nlc3Npb25fdmVyaXJ5X3JlcV9pZBABEiQKIHMyc19zZXJ2",
            "ZXJfc2Vzc2lvbl92ZXJpcnlfYWNrX2lkEAISHgoaczJzX3NlcnZlcl9zZXNz",
            "aW9uX3BpbmdfaWQQAxIeChpzMnNfc2VydmVyX3Nlc3Npb25fcG9uZ19pZBAE",
            "Eh4KGnMyc19jbGllbnRfc2Vzc2lvbl9waW5nX2lkEAUSHgoaczJzX2NsaWVu",
            "dF9zZXNzaW9uX3BvbmdfaWQQBhIcChhzZXJ2aWNlX2Rpc2NvdmVyeV9yZXFf",
            "aWQQBxIcChhzZXJ2aWNlX2Rpc2NvdmVyeV9hY2tfaWQQCBIYChNzMnNfYmFz",
            "ZV9tYXhfbXNnX2lkEKsCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pb.S2SBaseMsgId), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.s2s_server_session_veriry_req), global::Pb.s2s_server_session_veriry_req.Parser, new[]{ "ServerId", "ServerType", "ServerTypeStr", "Ip", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.s2s_server_session_veriry_ack), global::Pb.s2s_server_session_veriry_ack.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.s2s_server_session_ping), global::Pb.s2s_server_session_ping.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.s2s_server_session_pong), global::Pb.s2s_server_session_pong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.s2s_client_session_ping), global::Pb.s2s_client_session_ping.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.s2s_client_session_pong), global::Pb.s2s_client_session_pong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.sd_conn_attr), global::Pb.sd_conn_attr.Parser, new[]{ "ServerId", "ServerType", "ServerTypeStr", "Inter", "Outer", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.service_discovery), global::Pb.service_discovery.Parser, new[]{ "ServerId", "S2SInterListen", "S2SOuterListen", "ConnList", "C2SInterListen", "C2SOuterListen", "C2SMaxCount", "C2SHttpsUrl", "C2SHttpsCert", "C2SHttpsKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.service_discovery_req), global::Pb.service_discovery_req.Parser, new[]{ "ServerId", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.service_discovery_ack), global::Pb.service_discovery_ack.Parser, new[]{ "RebuildFlag", "VerifyFlag", "SdInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum S2SBaseMsgId {
    [pbr::OriginalName("s2s_base_min_msg_id")] S2SBaseMinMsgId = 0,
    [pbr::OriginalName("s2s_server_session_veriry_req_id")] S2SServerSessionVeriryReqId = 1,
    [pbr::OriginalName("s2s_server_session_veriry_ack_id")] S2SServerSessionVeriryAckId = 2,
    [pbr::OriginalName("s2s_server_session_ping_id")] S2SServerSessionPingId = 3,
    [pbr::OriginalName("s2s_server_session_pong_id")] S2SServerSessionPongId = 4,
    [pbr::OriginalName("s2s_client_session_ping_id")] S2SClientSessionPingId = 5,
    [pbr::OriginalName("s2s_client_session_pong_id")] S2SClientSessionPongId = 6,
    [pbr::OriginalName("service_discovery_req_id")] ServiceDiscoveryReqId = 7,
    [pbr::OriginalName("service_discovery_ack_id")] ServiceDiscoveryAckId = 8,
    [pbr::OriginalName("s2s_base_max_msg_id")] S2SBaseMaxMsgId = 299,
  }

  #endregion

  #region Messages
  public sealed partial class s2s_server_session_veriry_req : pb::IMessage<s2s_server_session_veriry_req> {
    private static readonly pb::MessageParser<s2s_server_session_veriry_req> _parser = new pb::MessageParser<s2s_server_session_veriry_req>(() => new s2s_server_session_veriry_req());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<s2s_server_session_veriry_req> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_veriry_req() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_veriry_req(s2s_server_session_veriry_req other) : this() {
      serverId_ = other.serverId_;
      serverType_ = other.serverType_;
      serverTypeStr_ = other.serverTypeStr_;
      ip_ = other.ip_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_veriry_req Clone() {
      return new s2s_server_session_veriry_req(this);
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private ulong serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "server_type" field.</summary>
    public const int ServerTypeFieldNumber = 2;
    private uint serverType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerType {
      get { return serverType_; }
      set {
        serverType_ = value;
      }
    }

    /// <summary>Field number for the "server_type_str" field.</summary>
    public const int ServerTypeStrFieldNumber = 3;
    private string serverTypeStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerTypeStr {
      get { return serverTypeStr_; }
      set {
        serverTypeStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 4;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 5;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as s2s_server_session_veriry_req);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(s2s_server_session_veriry_req other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (ServerType != other.ServerType) return false;
      if (ServerTypeStr != other.ServerTypeStr) return false;
      if (Ip != other.Ip) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0UL) hash ^= ServerId.GetHashCode();
      if (ServerType != 0) hash ^= ServerType.GetHashCode();
      if (ServerTypeStr.Length != 0) hash ^= ServerTypeStr.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ServerId);
      }
      if (ServerType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ServerType);
      }
      if (ServerTypeStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerTypeStr);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ip);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerId);
      }
      if (ServerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerType);
      }
      if (ServerTypeStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerTypeStr);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(s2s_server_session_veriry_req other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0UL) {
        ServerId = other.ServerId;
      }
      if (other.ServerType != 0) {
        ServerType = other.ServerType;
      }
      if (other.ServerTypeStr.Length != 0) {
        ServerTypeStr = other.ServerTypeStr;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadUInt64();
            break;
          }
          case 16: {
            ServerType = input.ReadUInt32();
            break;
          }
          case 26: {
            ServerTypeStr = input.ReadString();
            break;
          }
          case 34: {
            Ip = input.ReadString();
            break;
          }
          case 42: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class s2s_server_session_veriry_ack : pb::IMessage<s2s_server_session_veriry_ack> {
    private static readonly pb::MessageParser<s2s_server_session_veriry_ack> _parser = new pb::MessageParser<s2s_server_session_veriry_ack>(() => new s2s_server_session_veriry_ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<s2s_server_session_veriry_ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_veriry_ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_veriry_ack(s2s_server_session_veriry_ack other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_veriry_ack Clone() {
      return new s2s_server_session_veriry_ack(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as s2s_server_session_veriry_ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(s2s_server_session_veriry_ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(s2s_server_session_veriry_ack other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class s2s_server_session_ping : pb::IMessage<s2s_server_session_ping> {
    private static readonly pb::MessageParser<s2s_server_session_ping> _parser = new pb::MessageParser<s2s_server_session_ping>(() => new s2s_server_session_ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<s2s_server_session_ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_ping(s2s_server_session_ping other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_ping Clone() {
      return new s2s_server_session_ping(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as s2s_server_session_ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(s2s_server_session_ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(s2s_server_session_ping other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class s2s_server_session_pong : pb::IMessage<s2s_server_session_pong> {
    private static readonly pb::MessageParser<s2s_server_session_pong> _parser = new pb::MessageParser<s2s_server_session_pong>(() => new s2s_server_session_pong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<s2s_server_session_pong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_pong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_pong(s2s_server_session_pong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_server_session_pong Clone() {
      return new s2s_server_session_pong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as s2s_server_session_pong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(s2s_server_session_pong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(s2s_server_session_pong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class s2s_client_session_ping : pb::IMessage<s2s_client_session_ping> {
    private static readonly pb::MessageParser<s2s_client_session_ping> _parser = new pb::MessageParser<s2s_client_session_ping>(() => new s2s_client_session_ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<s2s_client_session_ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_client_session_ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_client_session_ping(s2s_client_session_ping other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_client_session_ping Clone() {
      return new s2s_client_session_ping(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as s2s_client_session_ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(s2s_client_session_ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(s2s_client_session_ping other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class s2s_client_session_pong : pb::IMessage<s2s_client_session_pong> {
    private static readonly pb::MessageParser<s2s_client_session_pong> _parser = new pb::MessageParser<s2s_client_session_pong>(() => new s2s_client_session_pong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<s2s_client_session_pong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_client_session_pong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_client_session_pong(s2s_client_session_pong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public s2s_client_session_pong Clone() {
      return new s2s_client_session_pong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as s2s_client_session_pong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(s2s_client_session_pong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(s2s_client_session_pong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class sd_conn_attr : pb::IMessage<sd_conn_attr> {
    private static readonly pb::MessageParser<sd_conn_attr> _parser = new pb::MessageParser<sd_conn_attr>(() => new sd_conn_attr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<sd_conn_attr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sd_conn_attr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sd_conn_attr(sd_conn_attr other) : this() {
      serverId_ = other.serverId_;
      serverType_ = other.serverType_;
      serverTypeStr_ = other.serverTypeStr_;
      inter_ = other.inter_;
      outer_ = other.outer_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sd_conn_attr Clone() {
      return new sd_conn_attr(this);
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private ulong serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "server_type" field.</summary>
    public const int ServerTypeFieldNumber = 2;
    private uint serverType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerType {
      get { return serverType_; }
      set {
        serverType_ = value;
      }
    }

    /// <summary>Field number for the "server_type_str" field.</summary>
    public const int ServerTypeStrFieldNumber = 3;
    private string serverTypeStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerTypeStr {
      get { return serverTypeStr_; }
      set {
        serverTypeStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inter" field.</summary>
    public const int InterFieldNumber = 4;
    private string inter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Inter {
      get { return inter_; }
      set {
        inter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outer" field.</summary>
    public const int OuterFieldNumber = 5;
    private string outer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Outer {
      get { return outer_; }
      set {
        outer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 6;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as sd_conn_attr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(sd_conn_attr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (ServerType != other.ServerType) return false;
      if (ServerTypeStr != other.ServerTypeStr) return false;
      if (Inter != other.Inter) return false;
      if (Outer != other.Outer) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0UL) hash ^= ServerId.GetHashCode();
      if (ServerType != 0) hash ^= ServerType.GetHashCode();
      if (ServerTypeStr.Length != 0) hash ^= ServerTypeStr.GetHashCode();
      if (Inter.Length != 0) hash ^= Inter.GetHashCode();
      if (Outer.Length != 0) hash ^= Outer.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ServerId);
      }
      if (ServerType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ServerType);
      }
      if (ServerTypeStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerTypeStr);
      }
      if (Inter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Inter);
      }
      if (Outer.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Outer);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerId);
      }
      if (ServerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerType);
      }
      if (ServerTypeStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerTypeStr);
      }
      if (Inter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Inter);
      }
      if (Outer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Outer);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(sd_conn_attr other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0UL) {
        ServerId = other.ServerId;
      }
      if (other.ServerType != 0) {
        ServerType = other.ServerType;
      }
      if (other.ServerTypeStr.Length != 0) {
        ServerTypeStr = other.ServerTypeStr;
      }
      if (other.Inter.Length != 0) {
        Inter = other.Inter;
      }
      if (other.Outer.Length != 0) {
        Outer = other.Outer;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadUInt64();
            break;
          }
          case 16: {
            ServerType = input.ReadUInt32();
            break;
          }
          case 26: {
            ServerTypeStr = input.ReadString();
            break;
          }
          case 34: {
            Inter = input.ReadString();
            break;
          }
          case 42: {
            Outer = input.ReadString();
            break;
          }
          case 50: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class service_discovery : pb::IMessage<service_discovery> {
    private static readonly pb::MessageParser<service_discovery> _parser = new pb::MessageParser<service_discovery>(() => new service_discovery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<service_discovery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery(service_discovery other) : this() {
      serverId_ = other.serverId_;
      s2SInterListen_ = other.s2SInterListen_;
      s2SOuterListen_ = other.s2SOuterListen_;
      connList_ = other.connList_.Clone();
      c2SInterListen_ = other.c2SInterListen_;
      c2SOuterListen_ = other.c2SOuterListen_;
      c2SMaxCount_ = other.c2SMaxCount_;
      c2SHttpsUrl_ = other.c2SHttpsUrl_;
      c2SHttpsCert_ = other.c2SHttpsCert_;
      c2SHttpsKey_ = other.c2SHttpsKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery Clone() {
      return new service_discovery(this);
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private ulong serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "s2s_inter_listen" field.</summary>
    public const int S2SInterListenFieldNumber = 2;
    private string s2SInterListen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string S2SInterListen {
      get { return s2SInterListen_; }
      set {
        s2SInterListen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "s2s_outer_listen" field.</summary>
    public const int S2SOuterListenFieldNumber = 3;
    private string s2SOuterListen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string S2SOuterListen {
      get { return s2SOuterListen_; }
      set {
        s2SOuterListen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conn_list" field.</summary>
    public const int ConnListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Pb.sd_conn_attr> _repeated_connList_codec
        = pb::FieldCodec.ForMessage(34, global::Pb.sd_conn_attr.Parser);
    private readonly pbc::RepeatedField<global::Pb.sd_conn_attr> connList_ = new pbc::RepeatedField<global::Pb.sd_conn_attr>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.sd_conn_attr> ConnList {
      get { return connList_; }
    }

    /// <summary>Field number for the "c2s_inter_listen" field.</summary>
    public const int C2SInterListenFieldNumber = 5;
    private string c2SInterListen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string C2SInterListen {
      get { return c2SInterListen_; }
      set {
        c2SInterListen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "c2s_outer_listen" field.</summary>
    public const int C2SOuterListenFieldNumber = 6;
    private string c2SOuterListen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string C2SOuterListen {
      get { return c2SOuterListen_; }
      set {
        c2SOuterListen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "c2s_max_count" field.</summary>
    public const int C2SMaxCountFieldNumber = 7;
    private uint c2SMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint C2SMaxCount {
      get { return c2SMaxCount_; }
      set {
        c2SMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "c2s_https_url" field.</summary>
    public const int C2SHttpsUrlFieldNumber = 8;
    private string c2SHttpsUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string C2SHttpsUrl {
      get { return c2SHttpsUrl_; }
      set {
        c2SHttpsUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "c2s_https_cert" field.</summary>
    public const int C2SHttpsCertFieldNumber = 9;
    private string c2SHttpsCert_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string C2SHttpsCert {
      get { return c2SHttpsCert_; }
      set {
        c2SHttpsCert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "c2s_https_key" field.</summary>
    public const int C2SHttpsKeyFieldNumber = 10;
    private string c2SHttpsKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string C2SHttpsKey {
      get { return c2SHttpsKey_; }
      set {
        c2SHttpsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as service_discovery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(service_discovery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (S2SInterListen != other.S2SInterListen) return false;
      if (S2SOuterListen != other.S2SOuterListen) return false;
      if(!connList_.Equals(other.connList_)) return false;
      if (C2SInterListen != other.C2SInterListen) return false;
      if (C2SOuterListen != other.C2SOuterListen) return false;
      if (C2SMaxCount != other.C2SMaxCount) return false;
      if (C2SHttpsUrl != other.C2SHttpsUrl) return false;
      if (C2SHttpsCert != other.C2SHttpsCert) return false;
      if (C2SHttpsKey != other.C2SHttpsKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0UL) hash ^= ServerId.GetHashCode();
      if (S2SInterListen.Length != 0) hash ^= S2SInterListen.GetHashCode();
      if (S2SOuterListen.Length != 0) hash ^= S2SOuterListen.GetHashCode();
      hash ^= connList_.GetHashCode();
      if (C2SInterListen.Length != 0) hash ^= C2SInterListen.GetHashCode();
      if (C2SOuterListen.Length != 0) hash ^= C2SOuterListen.GetHashCode();
      if (C2SMaxCount != 0) hash ^= C2SMaxCount.GetHashCode();
      if (C2SHttpsUrl.Length != 0) hash ^= C2SHttpsUrl.GetHashCode();
      if (C2SHttpsCert.Length != 0) hash ^= C2SHttpsCert.GetHashCode();
      if (C2SHttpsKey.Length != 0) hash ^= C2SHttpsKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ServerId);
      }
      if (S2SInterListen.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(S2SInterListen);
      }
      if (S2SOuterListen.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(S2SOuterListen);
      }
      connList_.WriteTo(output, _repeated_connList_codec);
      if (C2SInterListen.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(C2SInterListen);
      }
      if (C2SOuterListen.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(C2SOuterListen);
      }
      if (C2SMaxCount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(C2SMaxCount);
      }
      if (C2SHttpsUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(C2SHttpsUrl);
      }
      if (C2SHttpsCert.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(C2SHttpsCert);
      }
      if (C2SHttpsKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(C2SHttpsKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerId);
      }
      if (S2SInterListen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(S2SInterListen);
      }
      if (S2SOuterListen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(S2SOuterListen);
      }
      size += connList_.CalculateSize(_repeated_connList_codec);
      if (C2SInterListen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(C2SInterListen);
      }
      if (C2SOuterListen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(C2SOuterListen);
      }
      if (C2SMaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(C2SMaxCount);
      }
      if (C2SHttpsUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(C2SHttpsUrl);
      }
      if (C2SHttpsCert.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(C2SHttpsCert);
      }
      if (C2SHttpsKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(C2SHttpsKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(service_discovery other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0UL) {
        ServerId = other.ServerId;
      }
      if (other.S2SInterListen.Length != 0) {
        S2SInterListen = other.S2SInterListen;
      }
      if (other.S2SOuterListen.Length != 0) {
        S2SOuterListen = other.S2SOuterListen;
      }
      connList_.Add(other.connList_);
      if (other.C2SInterListen.Length != 0) {
        C2SInterListen = other.C2SInterListen;
      }
      if (other.C2SOuterListen.Length != 0) {
        C2SOuterListen = other.C2SOuterListen;
      }
      if (other.C2SMaxCount != 0) {
        C2SMaxCount = other.C2SMaxCount;
      }
      if (other.C2SHttpsUrl.Length != 0) {
        C2SHttpsUrl = other.C2SHttpsUrl;
      }
      if (other.C2SHttpsCert.Length != 0) {
        C2SHttpsCert = other.C2SHttpsCert;
      }
      if (other.C2SHttpsKey.Length != 0) {
        C2SHttpsKey = other.C2SHttpsKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadUInt64();
            break;
          }
          case 18: {
            S2SInterListen = input.ReadString();
            break;
          }
          case 26: {
            S2SOuterListen = input.ReadString();
            break;
          }
          case 34: {
            connList_.AddEntriesFrom(input, _repeated_connList_codec);
            break;
          }
          case 42: {
            C2SInterListen = input.ReadString();
            break;
          }
          case 50: {
            C2SOuterListen = input.ReadString();
            break;
          }
          case 56: {
            C2SMaxCount = input.ReadUInt32();
            break;
          }
          case 66: {
            C2SHttpsUrl = input.ReadString();
            break;
          }
          case 74: {
            C2SHttpsCert = input.ReadString();
            break;
          }
          case 82: {
            C2SHttpsKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class service_discovery_req : pb::IMessage<service_discovery_req> {
    private static readonly pb::MessageParser<service_discovery_req> _parser = new pb::MessageParser<service_discovery_req>(() => new service_discovery_req());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<service_discovery_req> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery_req() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery_req(service_discovery_req other) : this() {
      serverId_ = other.serverId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery_req Clone() {
      return new service_discovery_req(this);
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private ulong serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as service_discovery_req);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(service_discovery_req other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0UL) hash ^= ServerId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ServerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(service_discovery_req other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0UL) {
        ServerId = other.ServerId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadUInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class service_discovery_ack : pb::IMessage<service_discovery_ack> {
    private static readonly pb::MessageParser<service_discovery_ack> _parser = new pb::MessageParser<service_discovery_ack>(() => new service_discovery_ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<service_discovery_ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.SsBaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery_ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery_ack(service_discovery_ack other) : this() {
      rebuildFlag_ = other.rebuildFlag_;
      verifyFlag_ = other.verifyFlag_;
      sdInfo_ = other.sdInfo_ != null ? other.sdInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public service_discovery_ack Clone() {
      return new service_discovery_ack(this);
    }

    /// <summary>Field number for the "rebuild_flag" field.</summary>
    public const int RebuildFlagFieldNumber = 1;
    private bool rebuildFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RebuildFlag {
      get { return rebuildFlag_; }
      set {
        rebuildFlag_ = value;
      }
    }

    /// <summary>Field number for the "verify_flag" field.</summary>
    public const int VerifyFlagFieldNumber = 2;
    private bool verifyFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool VerifyFlag {
      get { return verifyFlag_; }
      set {
        verifyFlag_ = value;
      }
    }

    /// <summary>Field number for the "sd_info" field.</summary>
    public const int SdInfoFieldNumber = 3;
    private global::Pb.service_discovery sdInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.service_discovery SdInfo {
      get { return sdInfo_; }
      set {
        sdInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as service_discovery_ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(service_discovery_ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RebuildFlag != other.RebuildFlag) return false;
      if (VerifyFlag != other.VerifyFlag) return false;
      if (!object.Equals(SdInfo, other.SdInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RebuildFlag != false) hash ^= RebuildFlag.GetHashCode();
      if (VerifyFlag != false) hash ^= VerifyFlag.GetHashCode();
      if (sdInfo_ != null) hash ^= SdInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RebuildFlag != false) {
        output.WriteRawTag(8);
        output.WriteBool(RebuildFlag);
      }
      if (VerifyFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(VerifyFlag);
      }
      if (sdInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SdInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RebuildFlag != false) {
        size += 1 + 1;
      }
      if (VerifyFlag != false) {
        size += 1 + 1;
      }
      if (sdInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SdInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(service_discovery_ack other) {
      if (other == null) {
        return;
      }
      if (other.RebuildFlag != false) {
        RebuildFlag = other.RebuildFlag;
      }
      if (other.VerifyFlag != false) {
        VerifyFlag = other.VerifyFlag;
      }
      if (other.sdInfo_ != null) {
        if (sdInfo_ == null) {
          SdInfo = new global::Pb.service_discovery();
        }
        SdInfo.MergeFrom(other.SdInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RebuildFlag = input.ReadBool();
            break;
          }
          case 16: {
            VerifyFlag = input.ReadBool();
            break;
          }
          case 26: {
            if (sdInfo_ == null) {
              SdInfo = new global::Pb.service_discovery();
            }
            input.ReadMessage(SdInfo);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
